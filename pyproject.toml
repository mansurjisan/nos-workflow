[project]
name = "StofsWorkflow"
version = "0.0.0"
description = "StofsWorkflow is being developed as a tool which facilitates rapidly deploying operational models within the NOAA workflow systems"
authors = [
    { name = "Zach Cobell", email = "zcobell@thewaterinstitute.org" }
]
readme = "README.md"
license = { text = "CC0-1.0" }
requires-python = ">=3.9"
keywords = [ "forecast", "noaa", "ecflow", "adcirc", "schism" ]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 0 - Planning",
    "License :: OSI Approved :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Operating System :: POSIX :: Linux",
    "Topic :: Scientific/Engineering :: Oceanography",
    "Intended Audience :: Science/Research",
]

dependencies = [
    "schema",
    "pre-commit",
]

[project.scripts]
stofs = "StofsWorkflow.cli:stofs_cli"

[project.urls]
"Homepage" = "https://github.com/oceanmodeling/nos-workflow"
"Bug Reports" = "https://github.com/oceanmodeling/nos-workflow/issues"
"Source" = "https://github.com/oceanmodeling/nos-workflow.git"

[build-system]
requires = ["setuptools > 64.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
  "D",           # pydocstyle
  "ANN",         # flake8-annotations
]

ignore = [
  "PLR0913", # Too many arguments
  "PLR2004", # Magic number
  "E501",   # Line too long
  "RET506", # Unnecssary else
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D200",   # One-line docstring should fit on one line with quotes
  "D205",   # 1 blank line required between summary line and description
  "D212",   # Multi-line docstring summary should start at the second line
  "D415",   # First line should end with a period
  "ISC001", # Implicit string concatenation
]

unfixable = [
  "T20",  # Removes print statements
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools.dynamic]
version = { attr = "StofsWorkflow.__version__" }

[tool.bumpver]
current_version = "0.0.0"
version_pattern = 'MAJOR.MINOR.PATCH[PYTAGNUM]'
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"src/StofsWorkflow/__init__.py" = [
    '__version__ = "{version}"',
]
